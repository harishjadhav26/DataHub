apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: datahub
  labels:
    app: postgres
spec:
  ports:
    - name: postgres
      port: 5432
  clusterIP: None  # Headless service for StatefulSet
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: datahub
spec:
  serviceName: postgres
  replicas: 1  # Increase to 3 for HA
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      securityContext:
        runAsUser: 999
        fsGroup: 999
      containers:
        - name: postgres
          image: postgres:16
          securityContext:
            allowPrivilegeEscalation: false
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_DB
              value: datahub
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
              subPath: postgres-data
            - name: postgres-config-volume
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
          readinessProbe:
            exec:
              command: ["pg_isready", "-d", "datahub"]
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            exec:
              command: ["pg_isready", "-d", "datahub"]
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: postgres-config-volume
          configMap:
            name: postgres-config
            items:
              - key: postgresql.conf
                path: postgresql.conf
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        storageClassName: sc-local
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
