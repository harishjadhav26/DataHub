apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: datahub
  labels:
    app: postgres
spec:
  ports:
    - name: postgres
      port: 5432
  clusterIP: None  # Headless service for StatefulSet
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: datahub
spec:
  serviceName: postgres
  replicas: 1  # Increase to 3 for HA
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      securityContext:
        runAsUser: 999
        fsGroup: 999
        fsGroupChangePolicy: "OnRootMismatch"
      initContainers:
        - name: fix-permissions
          image: busybox
          command: ["sh", "-c", "chown -R 999:999 /var/lib/postgresql/data"]
          securityContext:
            runAsUser: 0  # Run as root ONLY for init
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data          
      containers:
        - name: postgres
          image: postgres:16
          #image: docker.io/harishjadhav26/postgres:16
          securityContext:
            allowPrivilegeEscalation: false 
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 999
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_DB
              value: datahub
            - name: POSTGRES_USER
              value: postgres
            - name: PGDATA
              value: "/var/lib/postgresql/data"
            - name: POSTGRES_PASSWORD_FILE
              value: "/secrets/password"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
              subPath: data
            - name: postgres-config-volume
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
            - name: postgres-secret
              mountPath: "/secrets"
              readOnly: true
      volumes:
        - name: postgres-storage
          emptyDir: {}
        - name: postgres-config-volume
          configMap:
            name: postgres-config
            items:
              - key: postgresql.conf
                path: postgresql.conf
        - name: postgres-secret
          secret:
            secretName: postgres-secret
            items:
              - key: password
                path: password
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        storageClassName: sc-local
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
